)
dat1<- dat %>% group_by(trct_org, trct_des) %>% summarise(n_com = n())
pa_od <- dat1 %>%
filter(str_detect(trct_org, "42101")) %>%
filter(str_detect(trct_des, "42101"))
dat2<- pa_od %>% separate(trct_org, into = c('trct_org', 'B'), sep = -4, convert = TRUE)
dat2<- dat2 %>% separate(trct_des, into = c('trct_des', 'C'), sep = -4, convert = TRUE)
dat2 <- dat2[, c("trct_org","trct_des", "n_com")]
Universitycity_od <- filter(dat2, trct_des == "42101980000" | trct_des == "42101009000"
| trct_des == "42101036900" | trct_des == "42101008801" | trct_des == "42101008802",  )
geo<-fread("~/STUDY/Coursework/Fall 2022/Planning_Methods/stplanr_export/pa_tract_geo.txt", select = c("GEOID", "INTPTLAT", "INTPTLONG"), colClasses = c("GEOID" = "character"))
geo<-st_as_sf(geo, coords = c("INTPTLONG", "INTPTLAT"), crs = 4326, agr = "constant")
phl<-st_read("https://opendata.arcgis.com/datasets/405ec3da942d4e20869d4e1449a2be48_0.geojson")
dat_dsire<- od2line(flow = Universitycity_od, zones = geo)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addPolylines(data = dat_dsire)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addPolylines(data = dat_dsire, weight = 3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addPolylines(data = dat_dsire, weight = 1, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%
addPolylines(data = dat_dsire, weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(75.1987, 39.9536, zoom = 18)%>%
addPolylines(data = dat_dsire, weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(75.1987, 39.9536, zoom = 8)%>%
addPolylines(data = dat_dsire, weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(39.9536, 75.1987, zoom = 8)%>%
addPolylines(data = dat_dsire, weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 8)%>%
addPolylines(data = dat_dsire, weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 18)%>%
addPolylines(data = dat_dsire, weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 12)%>%
addPolylines(data = dat_dsire, weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 10)%>%
addPolylines(data = dat_dsire, weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, color = "indanred3",weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, fillcolor = "indanred3",weight = 0.3, fillOpacity = 0.5)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, fillcolor = "indianred3",weight = 0.3, fillOpacity = 0.5)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, color = "indianred3",weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, col = "indianred3",weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, color = "indianred3",weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, stroke_color = "indianred3",weight = 0.3, fillOpacity = 0.5)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, color = "red",weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, color = "coral1",weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, color = "firebrick1",weight = 0.3, fillOpacity = 0.5)
map
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = dat_dsire, color = "red",weight = 0.3, fillOpacity = 0.5)
map
dat_dsire<- od2line(flow = Universitycity_od, zones = geo)
desire<- st_as_sf(dat_dsire)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color = "red",weight = 0.3, fillOpacity = 0.5)
map
desire$dist_units<- st_length(desire) #but what are the units??
desire$dist<- as.numeric(st_length(desire)) #this is helpful for plotting, sorting, etc
desire_proj<- st_transform(desire, crs = 2272)
desire_proj$dist_ft<- st_length(desire_proj)
desire$n_com<- as.numeric(desire$n_com)
#binary indicators
desire$iphone<-sample(c("Yes", "No"), nrow(desire), replace = TRUE)
desire$vehicle<-sample(c("Yes", "No"), nrow(desire), replace = TRUE)
# continuous variable
desire$medinc<-sample(c(30000,35000,40000,45000,50000,55000,60000,65000,70000,75000,80000), nrow(desire), replace = TRUE)
desire$pctwork<-sample(c("20%","35%","45%","70%"), nrow(desire), replace = TRUE)
# catergorical variables
desire$edu<-sample(c("High school", "Bachelors", "Masters", "PhD"), nrow(desire), replace = TRUE)
desire$transit<-sample(c("Walk", "Bike", "Car-Pool", "Private Vehicle", "Public Transit"), nrow(desire), replace = TRUE)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color = desire$iphone ,weight = 0.3, fillOpacity = 0.5)
map
pal1 <- colorFactor(palette = c('springgreen4', 'orchid4'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal3(iphone) ,weight = 0.3, fillOpacity = 0.5)
pal1 <- colorFactor(palette = c('springgreen4', 'orchid4'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.3, fillOpacity = 0.5)
map
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.3, fillOpacity = 0.5)addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.3, fillOpacity = 0.5)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright")
map
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.3, fillOpacity = 1)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright")
map
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright")
map
Place_name <- c("East Faimount Park", "Millenium Hall","UPenn", "AT&T", "Hospital of UPenn")
Lat <- c("39.98575546994041", "39.95959828816013", "39.95323439523277", "39.95379915928367", "39.949522248656834")
Lng <- c("-75.19472378896609", "-75.19040502315703", "-75.20132643284475", "-75.19818126478154", "-75.19302874219069")
df <- data.frame(Place_name, Lat, Lng)
View(df)
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = ~Lng, lat = ~Lat, radius = 3)
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = df$Lng, lat = df$Lat, radius = 3)
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = Lng, lat = Lat, radius = 3)
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, radius = 3)
View(df)
df <- as.numeric(df$Lat)
df <- as.numeric(df$Lng)
df <- data.frame(Place_name, Lat, Lng)
Lat <- as.numeric(c("39.98575546994041", "39.95959828816013", "39.95323439523277", "39.95379915928367", "39.949522248656834"))
Lng <- as.numeric(c("-75.19472378896609", "-75.19040502315703", "-75.20132643284475", "-75.19818126478154", "-75.19302874219069"))
df <- data.frame(Place_name, Lat, Lng)
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addMarkers(data = df, lng = Lng, lat = Lat)
map
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = Lng, lat = Lat, radius = 3, fillOpacity = 0.5, fillColor = "red")
map
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = Lng, lat = Lat, radius = 15, fillOpacity = 0.5, fillColor = "red")
map
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = Lng, lat = Lat, radius = 40, fillOpacity = 0.5, fillColor = "red")
map
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = Lng, lat = Lat, radius = 100, fillOpacity = 0.5, Color = "red", )
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = Lng, lat = Lat, radius = 100, fillOpacity = 0.5, Color = "red" )
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = Lng, lat = Lat, radius = 100, fillOpacity = 0.5, color = "#03F" )
map
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = Lng, lat = Lat, radius = 500, fillOpacity = 0.5, color = "red" )
map
pal1 <- colorFactor(palette = c('olivedrab', 'lightcoral'), domain= desire$iphone)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron)%>%setView(-75.1987, 39.9536, zoom = 11)%>%
addPolylines(data = desire, color =~pal1(iphone) ,weight = 0.4)%>% addLegend(pal = pal1, values = desire$iphone, opacity = 0.7, title = "People with Iphone",
position = "bottomright") %>% addCircles(data = df, lng = Lng, lat = Lat, radius = 300, fillOpacity = 0.5, color = "red" )
map
version$version.string
library(flexdashboard)
rm(list=ls())
library(flexdashboard)
install.packages("flexdashboard")
install.packages("tidyverse")
rm(list=ls())
library(flexdashboard)
library(tidyverse)
library(dplyr)
library(tidyr)
library(gmodels)
library(car)
install.packages("car")
library(sf)
install.packages("sf")
install.packages("leaflet")
library(plotly)
library(htmlwidgets)
library(tibble)
library(jsonlite)
library(shiny)
library(tidycensus)
install.packages("tidycensus")
install.packages("plotly")
install.packages("tmap")
rm(list=ls())
library(flexdashboard)
library(tidyverse)
library(dplyr)
library(tidyr)
library(car)
library(sf)
library(leaflet)
library(plotly)
library(htmlwidgets)
library(tibble)
library(jsonlite)
library(shiny)
library(tidycensus)
library(tmap)
library(rsconnect)
rsconnect::deployApp("C:\Users\Stuti Singh\Documents\STUDY\Coursework\Fall 2022\Studio\Code\Dashboard\dashboard_12_12.Rmd")
rsconnect::deployApp("C:/Users/Stuti Singh/Documents/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard/dashboard_12_12.Rmd")
install.packages("Hmisc")
install.packages("Formula")
rsconnect::deployApp("C:/Users/Stuti Singh/Documents/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard/dashboard_12_12.Rmd")
rm(list=ls())
library(flexdashboard)
library(tidyverse)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(gmodels)
library(Hmisc)
library(car)
library(sf)
library(flexdashboard)
library(leaflet)
library(plotly)
library(htmlwidgets)
library(tibble)
library(jsonlite)
library(shiny)
library(tidycensus)
library(tmap)
library(mapview)
library(tigris)
library(sf)
library(leafsync)
MBTA <- st_read("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\DistilledRoutes_converted")%>%
st_zm()
MBTA <- MBTA %>%
rename(
MBTA_ROUTE = ROUTE)
MBTA_transform <- st_transform(MBTA, 4326)
MBTA_transform <- transform(MBTA_transform, MBTA_ROUTE = as.numeric(MBTA_ROUTE))
Reliability <- read.csv("bus_reliability_2022.csv")
Reliability <- read.csv("bus_reliability_2022.csv")
Reliability <- read.csv("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\bus_reliability_2022.csv")
rsconnect::deployApp("C:/Users/Stuti Singh/Documents/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard/dashboard_12_12.Rmd")
MBTA <- read.csv("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\MBTA.csv")
MBTA <- read.csv("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\MBTA.csv")
MBTA <- read.csv("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\MBTA.csv")
write.csv(MBTA,
"MBTA.csv", row.names = FALSE, sep = '\t')
MBTA <- st_read("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\DistilledRoutes_converted")%>%
st_zm()
MBTA <- MBTA %>%
rename(
MBTA_ROUTE = ROUTE)
write.csv(MBTA,
"MBTA.csv", row.names = FALSE, sep = '\t')
MBTA <- read.csv("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\MBTA.csv", sep = '\t')
View(MBTA)
plot(MBTA)
MBTA <- st_read("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\DistilledRoutes_converted")%>%
st_zm()
MBTA <- MBTA %>%
rename(
MBTA_ROUTE = ROUTE)
MBTA_transform <- st_transform(MBTA, 4326)
MBTA_transform <- transform(MBTA_transform, MBTA_ROUTE = as.numeric(MBTA_ROUTE))
Reliability <- read.csv("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\bus_reliability_2022.csv")
Boston_Race <- st_read("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\Boston_Race")%>%
st_zm()
boston_income <- st_read("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\Boston_income")%>%
st_zm()
MBTA <- st_read("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\DistilledRoutes_converted")%>%
st_zm()
MBTA <- MBTA %>%
rename(
MBTA_ROUTE = ROUTE)
MBTA_transform <- st_transform(MBTA, 4326)
MBTA_transform <- transform(MBTA_transform, MBTA_ROUTE = as.numeric(MBTA_ROUTE))
Reliability <- read.csv("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\bus_reliability_2022.csv")
Boston_Race <- st_read("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\Boston_Race")%>%
st_zm()
boston_income <- st_read("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\Boston_income")%>%
st_zm()
MBTA <- st_read("C:\\Users\\Stuti Singh\\Documents\\STUDY\\Coursework\\Fall 2022\\Studio\\Code\\Dashboard\\DistilledRoutes_converted")%>%
st_zm()
View(MBTA)
setwd("~/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard")
rm(list=ls())
setwd("~/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard")
library(flexdashboard)
library(tidyverse)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(gmodels)
library(Hmisc)
library(car)
library(sf)
library(flexdashboard)
library(leaflet)
library(plotly)
library(htmlwidgets)
library(tibble)
library(jsonlite)
library(shiny)
library(tidycensus)
library(tmap)
library(mapview)
library(tigris)
library(sf)
library(leafsync)
install.packages("shinytest")
install.packages("shinytest")
list.files()
list.files()
MBTA <- st_read("Dashboard\\DistilledRoutes_converted")%>%
st_zm()
rm(list=ls())
library(flexdashboard)
library(tidyverse)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(gmodels)
library(Hmisc)
library(car)
library(sf)
library(flexdashboard)
library(leaflet)
library(plotly)
library(htmlwidgets)
library(tibble)
library(jsonlite)
library(shiny)
library(tidycensus)
library(tmap)
library(mapview)
library(tigris)
library(sf)
library(leafsync)
MBTA <- st_read("Dashboard\\DistilledRoutes_converted")%>%
st_zm()
getwd()
file.path()
getwd()
MBTA <- st_read("~/Dashboard/DistilledRoutes_converted")%>%
st_zm()
MBTA <- st_read("~\\Dashboard\\DistilledRoutes_converted")%>%
st_zm()
MBTA <- st_read("~\Dashboard\DistilledRoutes_converted")%>%
setwd("C:Code\Dashboard")
setwd("C:\Code\Dashboard")
getwd()
setwd("C:/Users/Stuti Singh/Documents/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard")
MBTA <- st_read("DistilledRoutes_converted")%>%
st_zm()
MBTA <- st_read("DistilledRoutes_converted")%>%
st_zm()
MBTA <- MBTA %>%
rename(
MBTA_ROUTE = ROUTE)
MBTA_transform <- st_transform(MBTA, 4326)
MBTA_transform <- transform(MBTA_transform, MBTA_ROUTE = as.numeric(MBTA_ROUTE))
Reliability <- read.csv("bus_reliability_2022.csv")
Boston_Race <- st_read("Boston_Race")%>%
st_zm()
boston_income <- st_read("Boston_income")%>%
st_zm()
runApp()
rm(list=ls())
library(flexdashboard)
library(tidyverse)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(gmodels)
library(Hmisc)
library(car)
library(sf)
library(flexdashboard)
library(leaflet)
library(plotly)
library(htmlwidgets)
library(tibble)
library(jsonlite)
library(shiny)
library(tidycensus)
library(tmap)
library(mapview)
library(tigris)
library(sf)
library(leafsync)
MBTA <- st_read("DistilledRoutes_converted")%>%
st_zm()
MBTA <- MBTA %>%
rename(
MBTA_ROUTE = ROUTE)
MBTA_transform <- st_transform(MBTA, 4326)
MBTA_transform <- transform(MBTA_transform, MBTA_ROUTE = as.numeric(MBTA_ROUTE))
Reliability <- read.csv("bus_reliability_2022.csv")
Boston_Race <- st_read("Boston_Race")%>%
st_zm()
boston_income <- st_read("Boston_income")%>%
st_zm()
shinytest:::app_path(appDir, "appDir")
shinytest:::app_path(Testing_check.Rmd, "C:\Users\Stuti Singh\Documents\STUDY\Coursework\Fall 2022\Studio\Code\Dashboard\rsconnect\documents")
shinytest:::app_path(Testing_check.Rmd, "C:/Users/Stuti Singh/Documents/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard/rsconnect/documents")
shinytest:::app_path(Testing_check.Rmd, "C:/Users/Stuti Singh/Documents/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard/rsconnect/documents/Testing_check.Rmd")
getwd()
shinyAppDir("C:/Users/Stuti Singh/Documents/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard/",
options=list(
width="100%", height=550
)
)
rsconnect::deployApp("C:/Users/Stuti Singh/Documents/STUDY/Coursework/Fall 2022/Studio/Code/Dashboard/Testing_check.Rmd")
remotes::install_github('rstudio/flexdashboard')
install.packages("remotes")
remotes::install_github('rstudio/flexdashboard')
rmarkdown::draft("index.Rmd", template = "flex_dashboard", package = "flexdashboard")
map2a <- leaflet(map1) %>%
addPolylines(data = MBTA_BUS_ROUTES_INBOUND, color="black", fillOpacity = 1, weight = 3) %>%
addPolylines(data = busin, color = "black", fillOpacity = 3, weight = 8)%>%
addProviderTiles(providers$Esri.WorldStreetMap, group = 'Street Map') %>%
addProviderTiles(providers$Stamen.Toner, group = 'Toner Lite') %>%
addProviderTiles(providers$CartoDB.Positron)%>% addLayersControl(baseGroups = c('Street Map',
'Toner Lite',
'World Imagery'),
overlayGroups = c('Census Tract', 'Bus Route'
))
